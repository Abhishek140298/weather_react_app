{"ast":null,"code":"var _s = $RefreshSig$();\nimport { GET_LAT_LONG_RESPONSE, GET_LOCATION_WEATHER } from \"../actionsTypes\";\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\n//Action defined for getting lat and long from the location\nexport const getLatLongResponse = data => {\n  return {\n    type: GET_LAT_LONG_RESPONSE,\n    payload: data\n  };\n};\nconst getLocationWeatherResponse = data => {\n  return {\n    type: GET_LOCATION_WEATHER,\n    payload: data\n  };\n};\nexport const useLocationWeatherDispatch = () => {\n  _s();\n  const dispatch = useDispatch();\n  const fetchLocationLatLong = async locationName => {\n    const options = {\n      method: 'GET',\n      url: \"https://nominatim.openstreetmap.org/search\",\n      params: {\n        q: locationName,\n        format: 'json'\n      }\n    };\n    const response = await axios.request(options);\n    console.log(\"Store data\", response);\n    dispatch(getLatLongResponse(response.data[0]));\n  };\n  const fetchwetherForLocation = async (lat, long) => {\n    const options = {\n      method: 'GET',\n      url: \"https://api.open-meteo.com/v1/forecast\",\n      params: {\n        latitude: lat,\n        longitude: long,\n        hourly: \"temperature_2m\"\n      }\n    };\n    const response = await axios.request(options);\n    console.log(\"Resposne for data\");\n  };\n  return {\n    fetchLocationLatLong,\n    fetchwetherForLocation\n  };\n};\n_s(useLocationWeatherDispatch, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["GET_LAT_LONG_RESPONSE","GET_LOCATION_WEATHER","useDispatch","axios","getLatLongResponse","data","type","payload","getLocationWeatherResponse","useLocationWeatherDispatch","_s","dispatch","fetchLocationLatLong","locationName","options","method","url","params","q","format","response","request","console","log","fetchwetherForLocation","lat","long","latitude","longitude","hourly"],"sources":["/Users/abhishekyadav/Desktop/Learning/ReactJS/weather_react_app/src/pages/Admin/actions/index.ts"],"sourcesContent":["import { GET_LAT_LONG_RESPONSE,GET_LOCATION_WEATHER } from \"../actionsTypes\"\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios'\n\n\n\ninterface ILocationResponse{\n    fetchLocationLatLong:(locationName:string)=>void\n    fetchwetherForLocation:(lat:any,long:any)=>void\n}\n\n//Action defined for getting lat and long from the location\nexport const getLatLongResponse=(data:any)=>{\n    return{\n        type:GET_LAT_LONG_RESPONSE,\n        payload:data\n    }\n}\n\nconst getLocationWeatherResponse=(data:any)=>{\n    return{\n        type:GET_LOCATION_WEATHER,\n        payload:data\n    }\n}\n\n\nexport const useLocationWeatherDispatch=(\n\n):ILocationResponse=>{\n    const dispatch=useDispatch()\n\nconst fetchLocationLatLong =async(locationName:string)=>{\n    const options={\n        method:'GET',\n        url:\"https://nominatim.openstreetmap.org/search\",\n        params:{\n            q: locationName,\n            format: 'json',\n        }\n    }\n    \n    const response= await axios.request(options)\n    console.log(\"Store data\",response)\n dispatch(getLatLongResponse(response.data[0]))\n\n\n\n}\n\n\nconst fetchwetherForLocation=async(lat:any,long:any)=>{\n\nconst options={\n    method:'GET',\n    url:\"https://api.open-meteo.com/v1/forecast\",\n    params:{\n        latitude:lat,\n        longitude:long,\n        hourly:\"temperature_2m\"\n    }\n}\n\nconst response=await axios.request(options)\nconsole.log(\"Resposne for data\",)\n}\n\n\nreturn {\n    fetchLocationLatLong,\n    fetchwetherForLocation\n}\n}"],"mappings":";AAAA,SAASA,qBAAqB,EAACC,oBAAoB,QAAQ,iBAAiB;AAC5E,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAM,OAAO;AASzB;AACA,OAAO,MAAMC,kBAAkB,GAAEC,IAAQ,IAAG;EACxC,OAAM;IACFC,IAAI,EAACN,qBAAqB;IAC1BO,OAAO,EAACF;EACZ,CAAC;AACL,CAAC;AAED,MAAMG,0BAA0B,GAAEH,IAAQ,IAAG;EACzC,OAAM;IACFC,IAAI,EAACL,oBAAoB;IACzBM,OAAO,EAACF;EACZ,CAAC;AACL,CAAC;AAGD,OAAO,MAAMI,0BAA0B,GAACA,CAAA,KAEnB;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAACT,WAAW,CAAC,CAAC;EAEhC,MAAMU,oBAAoB,GAAE,MAAMC,YAAmB,IAAG;IACpD,MAAMC,OAAO,GAAC;MACVC,MAAM,EAAC,KAAK;MACZC,GAAG,EAAC,4CAA4C;MAChDC,MAAM,EAAC;QACHC,CAAC,EAAEL,YAAY;QACfM,MAAM,EAAE;MACZ;IACJ,CAAC;IAED,MAAMC,QAAQ,GAAE,MAAMjB,KAAK,CAACkB,OAAO,CAACP,OAAO,CAAC;IAC5CQ,OAAO,CAACC,GAAG,CAAC,YAAY,EAACH,QAAQ,CAAC;IACrCT,QAAQ,CAACP,kBAAkB,CAACgB,QAAQ,CAACf,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAI/C,CAAC;EAGD,MAAMmB,sBAAsB,GAAC,MAAAA,CAAMC,GAAO,EAACC,IAAQ,KAAG;IAEtD,MAAMZ,OAAO,GAAC;MACVC,MAAM,EAAC,KAAK;MACZC,GAAG,EAAC,wCAAwC;MAC5CC,MAAM,EAAC;QACHU,QAAQ,EAACF,GAAG;QACZG,SAAS,EAACF,IAAI;QACdG,MAAM,EAAC;MACX;IACJ,CAAC;IAED,MAAMT,QAAQ,GAAC,MAAMjB,KAAK,CAACkB,OAAO,CAACP,OAAO,CAAC;IAC3CQ,OAAO,CAACC,GAAG,CAAC,mBAAoB,CAAC;EACjC,CAAC;EAGD,OAAO;IACHX,oBAAoB;IACpBY;EACJ,CAAC;AACD,CAAC;AAAAd,EAAA,CA7CYD,0BAA0B;EAAA,QAGpBP,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}